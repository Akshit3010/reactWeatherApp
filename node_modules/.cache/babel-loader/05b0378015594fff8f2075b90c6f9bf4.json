{"ast":null,"code":"var _jsxFileName = \"D:\\\\Akshit\\\\ReactApp\\\\weatherApp\\\\weather-app\\\\src\\\\Weather.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  const [city, setCity] = useState(null);\n  const [search, setSearch] = useState(\"Pune\");\n  useEffect(() => {\n    const fetchApi = async () => {\n      const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=bd8184da268988bea575aff8abcbdf3b`;\n      const response = await fetch(url);\n      const resjson = await response.json();\n      console.log(resjson);\n      setCity(resjson.main);\n    };\n\n    fetchApi();\n  }, [search]);\n  let currentTime = new Date();\n  var weekday = new Array(7);\n  weekday[0] = \"Sunday\";\n  weekday[1] = \"Monday\";\n  weekday[2] = \"Tuesday\";\n  weekday[3] = \"Wednesday\";\n  weekday[4] = \"Thursday\";\n  weekday[5] = \"Friday\";\n  weekday[6] = \"Saturday\";\n  let day = weekday[currentTime.getDay()];\n  let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  let now = new Date();\n  let month = months[now.getMonth() + 1];\n  let date = now.getDate();\n  let time = new Date().toLocaleTimeString();\n  const [ctime, setCtime] = useState(time);\n  setInterval(() => {\n    time = new Date().toLocaleTimeString();\n    setCtime(time);\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputData\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            className: \"inputField\",\n            placeholder: \"search any city...\",\n            onChange: e => {\n              setSearch(e.target.value);\n            },\n            value: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), !city ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"No result found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"head\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"wi wi-day-sunny\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"location\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-location-arrow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 42\n              }, this), \" \", search]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"temp\",\n              children: [city.temp, \"\\xB0Cel\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"min_max\",\n              children: [\"Feels Like : \", city.feels_like, \"\\xB0Cel \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"time\",\n              children: [day, \" | \", month, \" \", date, \" | \", ctime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wave one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wave two\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wave three\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Weather, \"M4UYDmtmuHegpmlHdtD+mswqoQA=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["D:/Akshit/ReactApp/weatherApp/weather-app/src/Weather.jsx"],"names":["React","useState","useEffect","Weather","city","setCity","search","setSearch","fetchApi","url","response","fetch","resjson","json","console","log","main","currentTime","Date","weekday","Array","day","getDay","months","now","month","getMonth","date","getDate","time","toLocaleTimeString","ctime","setCtime","setInterval","e","target","value","temp","feels_like"],"mappings":"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","sourcesContent":["import React ,{useState , useEffect}from \"react\";\r\n\r\nconst Weather=()=>{\r\n    const [city,setCity]= useState(null);\r\n    const [search,setSearch]= useState(\"Pune\");\r\n\r\n    useEffect(()=>{\r\n        const fetchApi= async ()=>{\r\n            const url=`http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=bd8184da268988bea575aff8abcbdf3b`\r\n            const response = await fetch(url);\r\n            const resjson= await response.json();\r\n            console.log(resjson);\r\n            setCity(resjson.main);\r\n        };\r\n        fetchApi();\r\n    },[search])\r\n\r\n\r\n    let currentTime= new Date();\r\n    var weekday = new Array(7);\r\n     weekday[0] = \"Sunday\";\r\n    weekday[1] = \"Monday\"; \r\n     weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n   weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n    \r\n    let day=weekday[currentTime.getDay()];\r\n\r\n    let months=[\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\"\r\n    ];\r\n\r\n    let now = new Date();\r\n    let month = months[now.getMonth()+1];\r\n    let date=now.getDate();\r\n\r\n    let time=new Date().toLocaleTimeString();\r\n\r\n    const [ctime , setCtime] = useState(time);\r\n\r\n    setInterval(() => {\r\n        time=new Date().toLocaleTimeString();\r\n        setCtime(time); \r\n    }, 1000);\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n            <div className=\"inputData\">\r\n                <input type=\"search\" \r\n                className=\"inputField\"\r\n                placeholder=\"search any city...\"\r\n                onChange={(e)=>{\r\n                 setSearch(e.target.value);\r\n                }\r\n                }\r\n                value={search}    \r\n                />\r\n            </div>\r\n\r\n            {!city ? (\r\n            <p className=\"error\">No result found</p>\r\n            ) : (\r\n                <>\r\n            <h5 className=\"head\">\r\n                <i className=\"wi wi-day-sunny\"/>\r\n               \r\n            </h5>\r\n            <div className=\"main\">\r\n                <h2 className=\"location\"><i className=\"fas fa-location-arrow\"></i> {search}</h2>\r\n                <h1 className=\"temp\">{city.temp}°Cel</h1>\r\n                <h3 className=\"min_max\">Feels Like : {city.feels_like}°Cel </h3>\r\n                <h3 className=\"time\">{day} | {month} {date} | {ctime}</h3>\r\n            </div>\r\n            <div className=\"wave one\"></div>\r\n            <div className=\"wave two\"></div>\r\n            <div className=\"wave three\"></div>\r\n            </>\r\n            )}\r\n           \r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}