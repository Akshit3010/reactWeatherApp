{"ast":null,"code":"import _regeneratorRuntime from\"D:/Akshit/ReactApp/weatherApp/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Akshit/ReactApp/weatherApp/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Akshit/ReactApp/weatherApp/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import DateAndTime from\"./DateAndTime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Weather=function Weather(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),city=_useState2[0],setCity=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),icon=_useState6[0],setIcon=_useState6[1];//<=====Function for weather API========>\nvar fetchApi=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,response,resjson,weatherMain,weatherIcon;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(search,\"&units=metric&appid=bd8184da268988bea575aff8abcbdf3b\");_context.next=3;return fetch(url);case 3:response=_context.sent;_context.next=6;return response.json();case 6:resjson=_context.sent;setCity(resjson);//Fetching the weather desc. for icons\nweatherMain=resjson.weather[0].main;//Creating icon classes object\nweatherIcon={Thunderstorm:\"wi wi-thunderstorm\",Drizzle:\"wi wi-sleet\",Rain:\"wi wi-storm-showers\",Snow:\"wi wi-snow\",Atmosphere:\"wi wi-fog\",Clear:\"wi wi-day-sunny\",Clouds:\"wi wi-day-fog\"};//Matching the values of Weather Desc.\nif(weatherMain===\"Thunderstorm\"){setIcon(weatherIcon.Thunderstorm);}else if(weatherMain===\"Drizzle\"){setIcon(weatherIcon.Drizzle);}else if(weatherMain===\"Rain\"){setIcon(weatherIcon.Rain);}else if(weatherMain===\"Snow\"){setIcon(weatherIcon.Snow);}else if(weatherMain===\"Atmosphere\"){setIcon(weatherIcon.Atmosphere);}else if(weatherMain===\"Clear\"){setIcon(weatherIcon.Clear);}else if(weatherMain===\"Clouds\"){setIcon(weatherIcon.Clouds);}case 11:case\"end\":return _context.stop();}}},_callee);}));return function fetchApi(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inputData\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"search\",className:\"inputField\",placeholder:\"search any city...\",onChange:function onChange(e){setSearch(e.target.value);},value:search}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:function onClick(){fetchApi();},children:\"Search\"})]}),!city.name?/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:\"Enter City Name To Get Weather\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"head\",children:/*#__PURE__*/_jsx(\"i\",{className:icon})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"location\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-location-arrow\"}),\" \",search]}),/*#__PURE__*/_jsxs(\"h1\",{className:\"temp\",children:[city.main.temp,\"\\xB0Cel\"]}),/*#__PURE__*/_jsxs(\"h3\",{className:\"min_max\",children:[\"Feels Like : \",city.main.feels_like,\"\\xB0Cel \"]}),/*#__PURE__*/_jsx(\"h3\",{className:\"time\",children:/*#__PURE__*/_jsx(DateAndTime,{})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"wave one\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wave two\"}),/*#__PURE__*/_jsx(\"div\",{className:\"wave three\"})]})]})})});};export default Weather;","map":{"version":3,"sources":["D:/Akshit/ReactApp/weatherApp/weather-app/src/Weather.jsx"],"names":["React","useState","DateAndTime","Weather","city","setCity","search","setSearch","icon","setIcon","fetchApi","url","fetch","response","json","resjson","weatherMain","weather","main","weatherIcon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","e","target","value","name","temp","feels_like"],"mappings":"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","sourcesContent":["import React ,{useState}from \"react\";\r\nimport DateAndTime from \"./DateAndTime\";\r\n\r\nconst Weather=()=>{\r\n    const [city,setCity]= useState(\"\");\r\n    const [search,setSearch]= useState(\"\");\r\n    const [icon , setIcon] = useState(\"\");\r\n\r\n    //<=====Function for weather API========>\r\n     const fetchApi= async ()=>{\r\n            const url=`http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=bd8184da268988bea575aff8abcbdf3b`\r\n            const response = await fetch(url);\r\n            const resjson= await response.json();\r\n            setCity(resjson);\r\n            \r\n            //Fetching the weather desc. for icons\r\n            let weatherMain= resjson.weather[0].main;\r\n\r\n            //Creating icon classes object\r\n            let weatherIcon={\r\n                Thunderstorm:\"wi wi-thunderstorm\",\r\n                Drizzle:\"wi wi-sleet\",\r\n                Rain:\"wi wi-storm-showers\",\r\n                Snow:\"wi wi-snow\",\r\n                Atmosphere:\"wi wi-fog\",\r\n                Clear:\"wi wi-day-sunny\",\r\n                Clouds:\"wi wi-day-fog\"\r\n              }\r\n              \r\n\r\n              //Matching the values of Weather Desc.\r\n              if(weatherMain === \"Thunderstorm\"){\r\n                  setIcon(weatherIcon.Thunderstorm);\r\n              } else if(weatherMain === \"Drizzle\"){\r\n                setIcon(weatherIcon.Drizzle);\r\n             } else if(weatherMain === \"Rain\"){\r\n                setIcon(weatherIcon.Rain);\r\n            } else if(weatherMain === \"Snow\"){\r\n                setIcon(weatherIcon.Snow);\r\n            } else if(weatherMain === \"Atmosphere\"){\r\n                setIcon(weatherIcon.Atmosphere);\r\n            } else if(weatherMain === \"Clear\"){\r\n                setIcon(weatherIcon.Clear);\r\n            } else if(weatherMain === \"Clouds\"){\r\n                setIcon(weatherIcon.Clouds);\r\n            }\r\n                 \r\n        };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"box\">\r\n            <div className=\"inputData\">\r\n                <input type=\"search\" \r\n                className=\"inputField\"\r\n                placeholder=\"search any city...\"\r\n                onChange={(e)=>{\r\n                 setSearch(e.target.value);\r\n                }\r\n                }\r\n                value={search}    \r\n                />\r\n                <button className=\"btn\" onClick={()=>{\r\n                    fetchApi();\r\n                }}>Search</button>\r\n            </div>\r\n            \r\n            {/* Using Ternary operator */}\r\n            {!city.name ? (\r\n            <p className=\"error\">Enter City Name To Get Weather</p>\r\n            ) : (\r\n                <>\r\n            <h5 className=\"head\">\r\n                <i className={icon}/>\r\n               \r\n            </h5>\r\n            <div className=\"main\">\r\n                <h2 className=\"location\"><i className=\"fas fa-location-arrow\"></i> {search}</h2>\r\n                <h1 className=\"temp\">{city.main.temp}Â°Cel</h1>\r\n                <h3 className=\"min_max\">Feels Like : {city.main.feels_like}Â°Cel </h3>\r\n                <h3 className=\"time\"><DateAndTime/></h3>\r\n            </div>\r\n            <div className=\"wave one\"></div>\r\n            <div className=\"wave two\"></div>\r\n            <div className=\"wave three\"></div>\r\n            </>\r\n            )}\r\n           \r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}