{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateAndTime = () => {\n  _s();\n\n  const [ctime, setCtime] = useState(time);\n  let currentTime = new Date();\n  var weekday = new Array(7);\n  weekday[0] = \"Sunday\";\n  weekday[1] = \"Monday\";\n  weekday[2] = \"Tuesday\";\n  weekday[3] = \"Wednesday\";\n  weekday[4] = \"Thursday\";\n  weekday[5] = \"Friday\";\n  weekday[6] = \"Saturday\";\n  let day = weekday[currentTime.getDay()];\n  let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  let now = new Date();\n  let month = months[now.getMonth()];\n  let date = now.getDate();\n  let time = new Date().toLocaleTimeString();\n  setInterval(() => {\n    time = new Date().toLocaleTimeString();\n    setCtime(time);\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [day, \" | \", month, \" \", date, \" | \", ctime]\n  }, void 0, true);\n};\n\n_s(DateAndTime, \"devp1Tqk48uc+CcX8ZVhMxwOapI=\");\n\n_c = DateAndTime;\nexport default DateAndTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateAndTime\");","map":{"version":3,"sources":["D:/Akshit/ReactApp/weatherApp/weather-app/src/DateAndTime.jsx"],"names":["React","useState","DateAndTime","ctime","setCtime","time","currentTime","Date","weekday","Array","day","getDay","months","now","month","getMonth","date","getDate","toLocaleTimeString","setInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,MAAMC,WAAW,GAAE,MAAI;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAASC,QAAT,IAAqBH,QAAQ,CAACI,IAAD,CAAnC;AAEA,MAAIC,WAAW,GAAE,IAAIC,IAAJ,EAAjB;AACA,MAAIC,OAAO,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAd;AACCD,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACDA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACCA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,SAAb;AACDA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,WAAb;AACAA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,UAAb;AACDA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACCA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,UAAb;AAEA,MAAIE,GAAG,GAACF,OAAO,CAACF,WAAW,CAACK,MAAZ,EAAD,CAAf;AAEA,MAAIC,MAAM,GAAC,CACP,KADO,EAEP,KAFO,EAGP,KAHO,EAIP,KAJO,EAKP,KALO,EAMP,KANO,EAOP,KAPO,EAQP,KARO,EASP,KATO,EAUP,KAVO,EAWP,KAXO,EAYP,KAZO,CAAX;AAeA,MAAIC,GAAG,GAAG,IAAIN,IAAJ,EAAV;AACA,MAAIO,KAAK,GAAGF,MAAM,CAACC,GAAG,CAACE,QAAJ,EAAD,CAAlB;AACA,MAAIC,IAAI,GAACH,GAAG,CAACI,OAAJ,EAAT;AAEA,MAAIZ,IAAI,GAAC,IAAIE,IAAJ,GAAWW,kBAAX,EAAT;AAGAC,EAAAA,WAAW,CAAC,MAAM;AACdd,IAAAA,IAAI,GAAC,IAAIE,IAAJ,GAAWW,kBAAX,EAAL;AACAd,IAAAA,QAAQ,CAACC,IAAD,CAAR;AACH,GAHU,EAGR,IAHQ,CAAX;AAKA,sBACI;AAAA,eACAK,GADA,SACQI,KADR,OACgBE,IADhB,SACyBb,KADzB;AAAA,kBADJ;AAMH,CAjDD;;GAAMD,W;;KAAAA,W;AAkDN,eAAeA,WAAf","sourcesContent":["import React ,{useState} from \"react\";\r\n\r\nconst DateAndTime =()=>{\r\n    \r\n    const [ctime , setCtime] = useState(time);\r\n\r\n    let currentTime= new Date();\r\n    var weekday = new Array(7);\r\n     weekday[0] = \"Sunday\";\r\n    weekday[1] = \"Monday\"; \r\n     weekday[2] = \"Tuesday\";\r\n    weekday[3] = \"Wednesday\";\r\n    weekday[4] = \"Thursday\";\r\n   weekday[5] = \"Friday\";\r\n    weekday[6] = \"Saturday\";\r\n    \r\n    let day=weekday[currentTime.getDay()];\r\n\r\n    let months=[\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\"\r\n    ];\r\n\r\n    let now = new Date();\r\n    let month = months[now.getMonth()];\r\n    let date=now.getDate();\r\n\r\n    let time=new Date().toLocaleTimeString();\r\n\r\n\r\n    setInterval(() => {\r\n        time=new Date().toLocaleTimeString();\r\n        setCtime(time); \r\n    }, 1000);\r\n\r\n    return (\r\n        <>\r\n       {day} | {month} {date} | {ctime}\r\n       \r\n        </>\r\n    );\r\n}\r\nexport default DateAndTime;"]},"metadata":{},"sourceType":"module"}